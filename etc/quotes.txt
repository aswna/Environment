A brute force solution that works is better than an elegant solution that doesn't work. -- Steve C McConnell
A controller that cannot control itself is worse than no controller at all: If you cannot manage yourself, you have no business managing others. -- Gerald Weinberg, Quality Software Management: First-order measurement, 1993
Adapting old programs to fit new machines usually means adapting new machines to behave like old ones. -- Alan J. Perlis, Epigrams in Programming, 1982
After all, C++ isn't a perfect match for Java's design aims either. -- Bjarne Stroustrup
A good system can't have a weak command language. -- Alan J. Perlis, Epigrams in Programming, 1982
A language that doesn't affect the way you think about programming, is not worth knowing. -- Alan J. Perlis, Epigrams in Programming, 1982
A LISP programmer knows the value of everything, but the cost of nothing. -- Alan J. Perlis, Epigrams in Programming, 1982
All new features added to C++ are intended to fix previously new features added to C++ -- David Jameson
A mathematician is a device for turning coffee into theorems. -- Paul Erdos
An adequate bootstrap is a contradiction in terms. -- Alan J. Perlis, Epigrams in Programming, 1982
A programming language is low level when its programs require attention to the irrelevant. -- Alan J. Perlis, Epigrams in Programming, 1982
A program without a loop and a structured variable isn't worth writing. -- Alan J. Perlis, Epigrams in Programming, 1982
Arguing that Java is better than C++ is like arguing that grasshoppers taste better than tree bark. -- Thant Tessman
Around computers it is difficult to find the correct unit of time to measure progress. Some cathedrals took a century to complete. Can you imagine the grandeur and scope of a program that would take as long? -- Alan J. Perlis, Epigrams in Programming, 1982
As Thomas Hobbes observed in the 17th century, life under mob rule is solitary, poor, nasty, brutish, and short. Life on a poorly run software project is solitary, poor, nasty, brutish, and hardly ever short enough. -- Steve C McConnell
As Will Rogers would have said, "There is no such thing as a free variable." -- Alan J. Perlis, Epigrams in Programming, 1982
A year spent in artificial intelligence is enough to make one believe in God. -- Alan J. Perlis, Epigrams in Programming, 1982
Beauty is more important in computing than anywhere else in technology because software is so complicated. Beauty is the ultimate defence against complexity. -- David Gelernter
Because of its vitality, the computing field is always in desperate need of new cliches: Banality soothes our nerves. -- Alan J. Perlis, Epigrams in Programming, 1982
Being really good at C++ is like being really good at using rocks to sharpen sticks. -- Thant Tessman 
Beware of the Turing tar-pit in which everything is possible but nothing of interest is easy. -- Alan J. Perlis, Epigrams in Programming, 1982
Bringing computers into the home won't change either one, but may revitalize the corner saloon. -- Alan J. Perlis, Epigrams in Programming, 1982
C++: an octopus made by nailing extra legs onto a dog. -- Steve Taylor
Certainly not every good program is object-oriented, and not every object-oriented program is good. -- Bjarne Stroustrup
C++: glacial compiles, insane complexity, impenetrable errors, laughable cross-platform compat, basically useless tools. -- Aaron Boodman
C++ has its place in the history of programming languages. Just as Caligula has his place in the history of the Roman Empire. -- Robert Firth
C++ is a language strongly optimized for liars and people who go by guesswork and ignorance. -- Erik Naggum
C++ is an insult to the human brain -- Niklaus Wirth
c++ is a pile of crap. -- Theo de Raadt
C is C++ without the BS. -- SocialPhatology
C++ is history repeated as tragedy. Java is history repeated as farce. -- Scott McKay
C++ is like jamming a helicopter inside a Miata and expecting some sort of improvement. -- Drew Olbrich
C++ is more of a rube-goldberg type thing full of high-voltages, large chain-driven gears, sharp edges, exploding widgets, and spots to get your fingers crushed. And because of it's complexity many (if not most) of it's users don't know how it works, and can't tell ahead of time what's going to cause them to loose an arm. -- Grant Edwards
C is not a big language, and it's not well served by a big book. -- Brian W. Kernighan and Dennis M. Ritchie, in The C Programming Language, Prentice Hall, 1988
C++ is probably the only language where the error [message] can be longer than the program -- aiju
C++ is the best example of second-system effect since OS/360. -- Henry Spencer
"C is the Fortran of the 90s." Wrong. C is the Fortran of the 70s. -- Norman Diamond
C++ is the only current language making COBOL look good. -- Bertrand Meyer
C++ is to C as Lung Cancer is to Lung. -- Clayton Cramer
Clearly, I reject the view that there is one way that is right for everyone and for every problem. -- Bjarne Stroustrup
C makes it easy to shoot yourself in the foot; C++ makes it harder, but when you do, it blows away your whole leg. -- Bjarne Stroustrup
Computation has made the tree flower. -- Alan J. Perlis, Epigrams in Programming, 1982
Computer Science is embarrassed by the computer. -- Alan J. Perlis, Epigrams in Programming, 1982
Computers don't introduce order anywhere as much as they expose opportunities. -- Alan J. Perlis, Epigrams in Programming, 1982
Controlling complexity is the essence of computer programming. -- Brian Kernighan
C++: Simula in wolf's clothing. -- Bjarne Stroustrup
C: The language that combines the power of assembly language with the flexibility of assembly language. -- [unknown]
C++ will do for C what Algol-68 did for Algol. -- David L Jones
Dealing with failure is easy: Work hard to improve. Success is also easy to handle: You've solved the wrong problem. Work hard to improve. -- Alan J. Perlis, Epigrams in Programming, 1982
Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it. -- Brian W. Kernighan and P. J. Plauger in The Elements of Programming Style
Defining OO as based on the use of class hierarchies and virtual functions is also practical in that it provides some guidance as to where OO is likely to be successful. -- Bjarne Stroustrup
Deleted code is debugged code. -- Jeff Sickel
Deletion is the most important tool of software design. -- [unknown]
Documentation is like term insurance: It satisfies because almost no one who subscribes to it depends on its benefits. -- Alan J. Perlis, Epigrams in Programming, 1982
Don't have good ideas if you aren't willing to be responsible for them. -- Alan J. Perlis, Epigrams in Programming, 1982
Early in the project you can have firm cost and schedule targets or a firm feature set, but not both. -- Steve C McConnell
Editing is a rewording activity. -- Alan J. Perlis, Epigrams in Programming, 1982
Everyone can be taught to sculpt: Michelangelo would have had to be taught not to. So it is with great programmers. -- Alan J. Perlis, Epigrams in Programming, 1982
Every program has (at least) two purposes: the one for which it was written, and another for which it wasn't. -- Alan J. Perlis, Epigrams in Programming, 1982
Every program is a part of some other program and rarely fits. -- Alan J. Perlis, Epigrams in Programming, 1982
Everything should be built top-down, except the first time. -- Alan J. Perlis, Epigrams in Programming, 1982
Finally I'm becoming stupider no more. -- Paul Erdos
First, I'd like to see the basic tools such as compilers, debuggers, profilers, database interfaces, GUI builders, CAD tools, and so forth fully support the ISO standard. -- Bjarne Stroustrup
First, solve the problem. Then, write the code. -- John Johnson
Fools ignore complexity. Pragmatists suffer it. Some can avoid it. Geniuses remove it. -- Alan J. Perlis, Epigrams in Programming, 1982
For systems, the analogue of a face-lift is to add to the control graph an edge that creates a cycle, not just an additional node. -- Alan J. Perlis, Epigrams in Programming, 1982
Functions delay binding; data structures induce binding. Moral: Structure data late in the programming process. -- Alan J. Perlis, Epigrams in Programming, 1982
Get into a rut early: Do the same process the same way. Accumulate idioms. Standardize. The only difference(!) between Shakespeare and you was the size of his idiom list - not the size of his vocabulary. -- Alan J. Perlis, Epigrams in Programming, 1982
Giving up on assembly language was the apple in our Garden of Eden: Languages whose use squanders machine cycles are sinful. The LISP machine now permits LISP programmers to abandon bra and fig-leaf. -- Alan J. Perlis, Epigrams in Programming, 1982
God may not play dice with the universe, but something strange is going on with the prime numbers. -- Paul Erdos
Good code is its own best documentation. As you're about to add a comment, ask yourself, 'How can I improve the code so that this comment isn't needed?' Improve the code and then document it to make it even clearer. -- Steve C McConnell
Historically, languages designed for other people to use have been bad: Cobol, PL/I, Pascal, Ada, C++. The good languages have been those that were designed for their own creators: C, Perl, Smalltalk, Lisp. -- Paul Graham
However, when Java is promoted as the sole programming language, its flaws and limitations become serious. -- Bjarne Stroustrup
I believe C++ instills fear in programmers, fear that the interaction of some details causes unpredictable results. Its unmanageable complexity has spawned more fear-preventing tools than any other language, but the solution should have been to create and use a language that does not overload the whole goddamn human. -- Erik Naggum
I consider C++ the most significant technical hazard to the survival of your project and do so without apologies. -- Alistair Cockburn
If a listener nods his head when you're explaining your program, wake him up. -- Alan J. Perlis, Epigrams in Programming, 1982
If a program manipulates a large amount of data, it does so in a small number of ways. -- Alan J. Perlis, Epigrams in Programming, 1982
If builders built houses the way programmers built programs, the first woodpecker to come along would destroy civilization. -- Gerald Weinberg attributed with the quote in: Murali Chemuturi (2010) Mastering Software Quality Assurance: Best Practices, Tools and Technique for Software Developers. p.ix
If C++ has taught me one thing, it's this: Just because the system is consistent doesn't mean it's not the work of Satan. -- Andrew Plotkin
If I have not seen as far as others, it is because giants were standing on my shoulders. -- Hal Abelson
I find languages that support just one programming paradigm constraining. -- Bjarne Stroustrup
If two people write exactly the same program, each should be put into microcode and then they certainly won't be the same. -- Alan J. Perlis, Epigrams in Programming, 1982
If we believe in data structures, we must believe in independent (hence simultaneous) processing. For why else would we collect items within a structure? Why do we tolerate languages that give us the one without the other? -- Alan J. Perlis, Epigrams in Programming, 1982
If you can imagine a society in which the computer- robot is the only menial, you can imagine anything. -- Alan J. Perlis, Epigrams in Programming, 1982
If you have a procedure with ten parameters, you probably missed some. -- Alan J. Perlis, Epigrams in Programming, 1982
If you like C++, you don't know C++. There's a mutual exclusion going on here, and I've yet to see a counter-example other than possibly a few of the members of the standards committee. -- ssylvan in reddit.
If your computer speaks English, it was probably made in Japan. -- Alan J. Perlis, Epigrams in Programming, 1982
If you're willing to restrict the flexibility of your approach, you can almost always do something better. -- John Carmack
If you think C++ is not overly complicated, just what is a protected abstract virtual base pure virtual private destructor and when was the last time you needed one? -- Tom Cargill
If you want to improve your software, don't test more; develop better. -- Steve C McConnell
I hope we'll be able to solve these problems before we leave. -- Paul Erdos
I invented the term Object-Oriented, and I can tell you I did not have C++ in mind. -- Alan Kay
I may be biased, but I tend to find a much lower tendency among female programmers to be dishonest about their skills, and thus do not say they know C++ when they are smart enough to realize that that would be a lie for all but perhaps 5 people on this planet. -- Erik Naggum
In a 5 year period we get one superb programming language. Only we can't control when the 5 year period will be. -- Alan J. Perlis, Epigrams in Programming, 1982
In computing, invariants are ephemeral. -- Alan J. Perlis, Epigrams in Programming, 1982
In computing, the mean time to failure keeps getting shorter. -- Alan J. Perlis, Epigrams in Programming, 1982
In computing, turning the obvious into the useful is a living definition of the word "frustration". -- Alan J. Perlis, Epigrams in Programming, 1982
In English every word can be verbed. Would that it were so in our programming languages. -- Alan J. Perlis, Epigrams in Programming, 1982
In essence, the problem is that, "if it walks like a duck and quacks like a duck", it could be a dragon doing a duck impersonation. You may not always want to let dragons into a pond, even if they can impersonate a duck. -- Alex Martelli
In man-machine symbiosis, it is man who must adjust: The machines can't. -- Alan J. Perlis, Epigrams in Programming, 1982
In programming, as in everything else, to be in error is to be reborn. -- Alan J. Perlis, Epigrams in Programming, 1982
In programming, everything we do is a special case of something more general -- and often we know it too quickly. -- Alan J. Perlis, Epigrams in Programming, 1982
In seeking the unattainable, simplicity only gets in the way. -- Alan J. Perlis, Epigrams in Programming, 1982
Inside every large problem is a small problem struggling to get out. -- Niklaus Wirth
In software systems, it is often the early bird that makes the worm. -- Alan J. Perlis, Epigrams in Programming, 1982
Interfaces keep things tidy, but don't accelerate growth: Functions do. -- Alan J. Perlis, Epigrams in Programming, 1982
In the long run every program becomes rococo - then rubble. -- Alan J. Perlis, Epigrams in Programming, 1982
Is it possible that software is not like anything else, that it is meant to be discarded: that the whole point is to see it as a soap bubble? -- Alan J. Perlis, Epigrams in Programming, 1982
It goes against the grain of modern education to teach children to program. What fun is there in making plans, acquiring discipline in organizing thoughts, devoting attention to detail and learning to be self-critical? -- Alan J. Perlis, Epigrams in Programming, 1982
It has been discovered that C++ provides a remarkable facility for concealing the trival details of a program -- such as where its bugs are. -- David Keppel
I think it is inevitable that people program poorly. Training will not substantially help matters. We have to learn to live with it. -- Alan Perlis
I think maybe the guy who invented C++ doesn't know the difference between increment and excrement. -- smcameron
It is better to have 100 functions operate on one data structure than 10 functions on 10 data structures. -- Alan J. Perlis, Epigrams in Programming, 1982
It is easier to change the specification to fit the program than vice versa. -- Alan J. Perlis, Epigrams in Programming, 1982
It is easier to write an incorrect program than understand a correct one. -- Alan J. Perlis, Epigrams in Programming, 1982
It is easy to study the rules of overloading and of templates without noticing that together they are one of the keys to elegant and efficient type-safe containers. -- Bjarne Stroustrup
It is nice to know that the computer understands the problem. But I would like to understand it too. -- Eugene Wigner
It is not a language's weakness but its strengths that control the gradient of its change: Alas, a language never escapes its embryonic sac. -- Alan J. Perlis, Epigrams in Programming, 1982
It is not the computer's fault that Maxwell's equations are not adequate to design the electric motor. -- Alan J. Perlis, Epigrams in Programming, 1982
It is the user who should parameterize procedures, not their creators. -- Alan J. Perlis, Epigrams in Programming, 1982
It's better to wait for a productive programmer to become available than it is to wait for the first available programmer to become productive. -- Steve C McConnell
It's difficult to extract sense from strings, but they're the only communication coin we can count on. -- Alan J. Perlis, Epigrams in Programming, 1982
It's hard enough to find an error in your code when you're looking for it; it's even harder when you've assumed your code is error-free. -- Steve C McConnell
It's not that Perl programmers are idiots, it's that the language rewards idiotic behavior in a way that no other language or tool has ever done. -- Erik Naggum, comp.lang.lisp
It's OK to figure out murder mysteries, but you shouldn't need to figure out code. You should be able to read it. -- Steve C McConnell
It's time for software development to grow up. -- Steve C McConnell
I would encourage nonproprietary standards for tools and libraries. -- Bjarne Stroustrup
Java is, in many ways, C++--. -- Michael Feldman
Java, the best argument for Smalltalk since C++. -- Frank Winkler
[keeping somebody] from using C++ makes me feel like I saved a life -- aiju
Life is too long to know C++ well. -- Erik Naggum
Like punning, programming is a play on words. -- Alan J. Perlis, Epigrams in Programming, 1982
{Major-Willard} C++ damages the brain ... -- EWD
Make no mistake about it: Computers process numbers - not symbols. We measure our understanding (and control) by the extent to which we can arithmetize an activity. -- Alan J. Perlis, Epigrams in Programming, 1982
Making something variable is easy. Controlling duration of constancy is the trick. -- Alan J. Perlis, Epigrams in Programming, 1982
Mathematicians stand on each others' shoulders and computer scientists stand on each others' toes. -- Richard Hamming
Most people find the concept of programming obvious, but the doing impossible. -- Alan J. Perlis, Epigrams in Programming, 1982
Motto for a research laboratory: What we work on today, others will first think of tomorrow. -- Alan J. Perlis, Epigrams in Programming, 1982
My brain is open. -- Paul Erdos
My list of basic tools is a partial answer to the question about what has changed: Over the past few years, large numbers of programmers have come to depend on elaborate tools to interface code with systems facilities. -- Bjarne Stroustrup
Never trouble trouble till trouble troubles you. -- John Adams
Nobody really knows what the Bourne shell's grammar is. Even examination of the source code is little help. -- Tom Duff
Nothing is more dangerous than an idea if it's the only one you have. -- Emil-Auguste Chartier, Propos sur la religion, 1938
Often it is the means that justify the ends: Goals advance technique and technique survives even when goal structures crumble. -- Alan J. Perlis, Epigrams in Programming, 1982
*Oh, definitely. C++ may not be the worst programming language ever created, but without a doubt it's the worst ever to be taken seriously. -- Mason Wheeler
Once you understand how to write a program get someone else to write it. -- Alan J. Perlis, Epigrams in Programming, 1982
One can only display complex information in the mind. Like seeing, movement or flow or alteration of view is more important than the static picture, no matter how lovely. -- Alan J. Perlis, Epigrams in Programming, 1982
One can't proceed from the informal to the formal by formal means. -- Alan J. Perlis, Epigrams in Programming, 1982
One does not learn computing by using a hand calculator, but one can forget arithmetic. -- Alan J. Perlis, Epigrams in Programming, 1982
One man's constant is another man's variable. -- Alan J. Perlis, Epigrams in Programming, 1982
One of my most productive days was throwing away 1000 lines of code. -- Ken Thompson
Optimization hinders evolution. -- Alan J. Perlis, Epigrams in Programming, 1982
Over the centuries the Indians developed sign language for communicating phenomena of interest. Programmers from different tribes (FORTRAN, LISP, ALGOL, SNOBOL, etc.) could use one that doesn't require them to carry a blackboard on their ponies. -- Alan J. Perlis, Epigrams in Programming, 1982
People who passionately want to believe that the world is basically simple react to this with a fury that goes beyond what I consider appropriate for discussing a programming language. -- Bjarne Stroustrup
Perhaps if we wrote programs from childhood on, as adults we'd be able to read them. -- Alan J. Perlis, Epigrams in Programming, 1982
Personally, I look forward to better tools for analyzing C++ source code. -- Bjarne Stroustrup
PL/I and Ada started out with all the bloat, were very daunting languages, and got bad reputations (deservedly). C++ has shown that if you slowly bloat up a language over a period of years, people don't seem to mind as much. -- James Hague
Programmers are not to be measured by their ingenuity and their logic but by the completeness of their case analysis. -- Alan J. Perlis, Epigrams in Programming, 1982
Programming is an unnatural act. -- Alan J. Perlis, Epigrams in Programming, 1982
Prolonged contact with the computer turns mathematicians into clerks and vice versa. -- Alan J. Perlis, Epigrams in Programming, 1982
Property is a nuisance. -- Paul Erdos
Purely applicative languages are poorly applicable. -- Alan J. Perlis, Epigrams in Programming, 1982
qmon is for sissies, real men use command-line tools, really manly men use qconf -[admr]attr, [Chuck Norris / Jack Bower] uses qconf -purge -- Daniel Templeton
Quality is value to some person(s). -- Gerald Weinberg cited in Matthew Heusser, Govind Kulkarni (2011) How to Reduce the Cost of Software Testing. p.95
Recursion is the root of computation since it trades description for time. -- Alan J. Perlis, Epigrams in Programming, 1982
Re graphics: A picture is worth 10K words - but only those to describe the picture. Hardly any sets of 10K words can be adequately described with pictures. -- Alan J. Perlis, Epigrams in Programming, 1982
Simplicity does not precede complexity, but follows it. -- Alan J. Perlis, Epigrams in Programming, 1982
Simplicity is prerequisite for reliability. -- Edsger W. Dijkstra
Software is under a constant tension. Being symbolic it is arbitrarily perfectible; but also it is arbitrarily changeable. -- Alan J. Perlis, Epigrams in Programming, 1982
So many good ideas are never heard from again once they embark in a voyage on the semantic gulf. -- Alan J. Perlis, Epigrams in Programming, 1982
Some programming languages manage to absorb change, but withstand progress. -- Alan J. Perlis, Epigrams in Programming, 1982
Sometimes I think the only universal in the computing field is the fetch-execute cycle. -- Alan J. Perlis, Epigrams in Programming, 1982
Structured Programming supports the law of the excluded muddle. -- Alan J. Perlis, Epigrams in Programming, 1982
Symmetry is a complexity-reducing concept (co-routines include subroutines); seek it everywhere. -- Alan J. Perlis, Epigrams in Programming, 1982
Syntactic sugar causes cancer of the semicolon. -- Alan J. Perlis, Epigrams in Programming, 1982
Systems have sub-systems and sub-systems have sub- systems and so on ad infinitum - which is why we're always starting over. -- Alan J. Perlis, Epigrams in Programming, 1982
Television is something the Russians invented to destroy American education. -- Paul Erdos
The best book on programming for the layman is "Alice in Wonderland"; but that's because it's the best book on anything for the layman. -- Alan J. Perlis, Epigrams in Programming, 1982
The cheapest, fastest, and most reliable components are those that aren't there. -- Gordon Bell
The computer is the ultimate polluter: its feces are indistinguish- able from the food it produces. -- Alan J. Perlis, Epigrams in Programming, 1982
The computer reminds one of Lon Chaney -- it is the machine of a thousand faces. -- Alan J. Perlis, Epigrams in Programming, 1982
The computing scientist's main challenge is not to get confused by the complexities of his own making. -- E. W. Dijkstra
The cybernetic exchange between man, computer and algorithm is like a game of musical chairs: The frantic search for balance always leaves one of the three standing ill at ease. -- Alan J. Perlis, Epigrams in Programming, 1982
The debate rages on: is PL/I Bachtrian or Dromedary? -- Alan J. Perlis, Epigrams in Programming, 1982
The eleventh commandment was "Thou Shalt Compute" or "Thou Shalt Not Compute" - I forget which. -- Alan J. Perlis, Epigrams in Programming, 1982
The goal of computation is the emulation of our synthetic abilities, not the understanding of our analytic ones. -- Alan J. Perlis, Epigrams in Programming, 1982
The job of the average manager requires a shift in focus every few minutes. The job of the average software developer requires that the developer not shift focus more often than every few hours. -- Steve C McConnell
The key to performance is elegance, not battalions of special cases. -- Jon Bentley and Doug McIlroy
The last good thing written in C++ was the Pachelbel Canon. -- Jerry Olson
The most effective debugging tool is still careful thought, coupled with judiciously placed print statements. -- Brian W. Kernighan, in the paper Unix for Beginners (1979)
The most important computer is the one that rages in our skulls and ever seeks that satisfactory external emulator. The standarization of real computers would be a disaster - and so it probably won't happen. -- Alan J. Perlis, Epigrams in Programming, 1982
The most reliable components are the ones you leave out. -- Gordon Bell
The only constructive theory connecting neuroscience and psychology will arise from the study of software. -- Alan J. Perlis, Epigrams in Programming, 1982
The problem is not the problem. The problem is your attitude about the problem. -- Captain Jack Sparrow
The problem with quick and dirty, as some people have said, is that the dirty remains long after the quick has been forgotten. -- Steve C McConnell
The proof of a system's value is its existence. -- Alan J. Perlis, Epigrams in Programming, 1982
There are only two things wrong with C++: The initial concept and the implementation. -- Bertrand Meyer
There are three signs of senility. The first sign is that a man forgets his theorems. The second sign is that he forgets to zip up. The third sign is that he forgets to zip down. -- Paul Erdos
There are two ways of constructing a software design: One way is to make it so simple that there are obviously no deficiencies and the other way is to make it so complicated that there are no obvious deficiencies. -- C.A.R. Hoare, The 1980 ACM Turing Award Lecture
There are two ways to write error-free programs; only the third one works. -- Alan J. Perlis, Epigrams in Programming, 1982
There will always be things we wish to say in our programs that in all known languages can only be said poorly. -- Alan J. Perlis, Epigrams in Programming, 1982
The standard library saves programmers from having to reinvent the wheel. -- Bjarne Stroustrup
The string is a stark data structure and everywhere it is passed there is much duplication of process. It is a perfect vehicle for hiding information. -- Alan J. Perlis, Epigrams in Programming, 1982
The use of a program to prove the 4-color theorem will not change mathematics - it merely demonstrates that the theorem, a challenge for a century, is probably not important to mathematics. -- Alan J. Perlis, Epigrams in Programming, 1982
Think of all the psychic energy expended in seeking a fundamental distinction between "algorithm" and "program". -- Alan J. Perlis, Epigrams in Programming, 1982
Think of it! With VLSI we can pack 100 ENIACS in 1 sq. cm. -- Alan J. Perlis, Epigrams in Programming, 1982
This evolution may compromise Java's claim of being simpler than C++, but my guess is that the effort will make Java a better language than it is today. -- Bjarne Stroustrup
Though the Chinese should adore APL, it's FORTRAN they put their money on. -- Alan J. Perlis, Epigrams in Programming, 1982
Thus, the standard library will serve as both a tool and as a teacher. -- Bjarne Stroustrup
To me C++ seems to be a language that has sacrificed orthogonality and elegance for random expediency. -- Meilir Page-Jones
To understand a program you must become both the machine and the program. -- Alan J. Perlis, Epigrams in Programming, 1982
Unix is a junk OS designed by a committee of PhDs. -- Dave Cutler
Unix is simple. It just takes a genius to understand its simplicity. -- Dennis Ritchie
UNIX was not designed to stop its users from doing stupid things, as that would also stop them from doing clever things. -- Doug Gwyn
We are on the verge: Today our program proved Fermat's next-to-last theorem. -- Alan J. Perlis, Epigrams in Programming, 1982
We are uncovering better ways of developing software by doing it and helping others do it. -- Manifesto for Agile Software Development, 2001
[...] we have come to value: 1. Individuals and interactions over processes and tools. -- Manifesto for Agile Software Development, 2001
[...] we have come to value: 2. Working software over comprehensive documentation. -- Manifesto for Agile Software Development, 2001
[...] we have come to value: 3. Customer collaboration over contract negotiation. -- Manifesto for Agile Software Development, 2001
[...] we have come to value: 4. Responding to change over following a plan. -- Manifesto for Agile Software Development, 2001
We have the mini and the micro computer. In what semantic niche would the pico computer fall? -- Alan J. Perlis, Epigrams in Programming, 1982
We kid ourselves if we think that the ratio of procedure to data in an active data-base system can be made arbitrarily small or even kept small. -- Alan J. Perlis, Epigrams in Programming, 1982
We toast the Lisp programmer who pens his thoughts within nests of parentheses. -- Alan Perlis
We will never run out of things to program as long as there is a single program around. -- Alan J. Perlis, Epigrams in Programming, 1982
What is the difference between a Turing machine and the modern computer? It's the same as that between Hillary's ascent of Everest and the establishment of a Hilton hotel on its peak. -- Alan J. Perlis, Epigrams in Programming, 1982
When a professor insists computer science is X but not Y, have compassion for his graduate students. -- Alan J. Perlis, Epigrams in Programming, 1982
Whenever I solve a difficult problem with C++, I feel like I've won a bar fight. -- Michael Fogus
Whenever the C++ language designers had two competing ideas as to how they should solve some problem, they said, "OK, we'll do them both". So the language is too baroque for my taste. -- Donald E Knuth
Whenever two programmers meet to criticize their programs, both are silent. -- Alan J. Perlis, Epigrams in Programming, 1982
When in doubt, use brute force. -- Ken Thompson
When I see a bird that walks like a duck and swims like a duck and quacks like a duck, I call that bird a duck. -- James Whitcomb Riley
When someone says "I want a programming language in which I need only say what I wish done," give him a lollipop. -- Alan J. Perlis, Epigrams in Programming, 1982
When we understand knowledge-based systems, it will be as before -- except our fingertips will have been singed. -- Alan J. Perlis, Epigrams in Programming, 1982
When we write programs that "learn", it turns out that we do and they don't. -- Alan J. Perlis, Epigrams in Programming, 1982
When you have eliminated the impossible, whatever remains, however improbable, must be the truth. -- Sherlock Holmes
Wherever there is modularity there is the potential for misunderstanding: Hiding information implies a need to check communication. -- Alan J. Perlis, Epigrams in Programming, 1982
Why did the Roman Empire collapse? What is Latin for office automation? -- Alan J. Perlis, Epigrams in Programming, 1982
With C++, it's possible to make code that isn't understandable by anyone, with C, this is very hard. -- Mike Abrash
Within a computer natural language is unnatural. -- Alan J. Perlis, Epigrams in Programming, 1982
Within C++, there is a much smaller and cleaner language struggling to get out. -- Bjarne Stroustrup
With the increasing importance of standards for system-level objects such as COM and CORBA, it is particularly important that the C++ bindings to those be clean, well documented, and simple to use. -- Bjarne Stroustrup
You can measure a programmer's perspective by noting his attitude on the continuing vitality of FORTRAN. -- Alan J. Perlis, Epigrams in Programming, 1982
You can't communicate complexity, only an awareness of it. -- Alan J. Perlis, Epigrams in Programming, 1982
You think you know when you can learn, are more sure when you can write, even more when you can teach, but certain when you can program. -- Alan J. Perlis, Epigrams in Programming, 1982
1. Our highest priority is to satisfy the customer through early and continuous delivery of valuable software. -- Principles behind the Agile Manifesto
2. Welcome changing requirements, even late in development. Agile processes harness change for the customer's competitive advantage. -- Principles behind the Agile Manifesto
3. Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale. -- Principles behind the Agile Manifesto
4. Business people and developers must work together daily throughout the project. -- Principles behind the Agile Manifesto
5. Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done. -- Principles behind the Agile Manifesto
6. The most efficient and effective method of conveying information to and within a development team is face-to-face conversation. -- Principles behind the Agile Manifesto
7. Working software is the primary measure of progress. -- Principles behind the Agile Manifesto
8. Agile processes promote sustainable development. The sponsors, developers, and users should be able to maintain a constant pace indefinitely. -- Principles behind the Agile Manifesto
9. Continuous attention to technical excellence and good design enhances agility. -- Principles behind the Agile Manifesto
10. Simplicity--the art of maximizing the amount of work not done--is essential. -- Principles behind the Agile Manifesto
11. The best architectures, requirements, and designs emerge from self-organizing teams. -- Principles behind the Agile Manifesto
12. At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly. -- Principles behind the Agile Manifesto
21 hours of downtime is a big stick to beat the salesman with -- Bill Ray about the O2 outage
1. Beautiful is better than ugly. -- The Zen of Python, by Tim Peters
2. Explicit is better than implicit. -- The Zen of Python, by Tim Peters
3. Simple is better than complex. -- The Zen of Python, by Tim Peters
4. Complex is better than complicated. -- The Zen of Python, by Tim Peters
5. Flat is better than nested. -- The Zen of Python, by Tim Peters
6. Sparse is better than dense. -- The Zen of Python, by Tim Peters
7. Readability counts. -- The Zen of Python, by Tim Peters
8-9. Special cases aren't special enough to break the rules. Although practicality beats purity. -- The Zen of Python, by Tim Peters
10-11. Errors should never pass silently. Unless explicitly silenced. -- The Zen of Python, by Tim Peters
12. In the face of ambiguity, refuse the temptation to guess. -- The Zen of Python, by Tim Peters
13-14. There should be one-- and preferably only one --obvious way to do it. Although that way may not be obvious at first unless you're Dutch. -- The Zen of Python, by Tim Peters
15-16. Now is better than never. Although never is often better than *right* now. -- The Zen of Python, by Tim Peters
17. If the implementation is hard to explain, it's a bad idea. -- The Zen of Python, by Tim Peters
18. If the implementation is easy to explain, it may be a good idea. -- The Zen of Python, by Tim Peters
19. Namespaces are one honking great idea -- let's do more of those! -- The Zen of Python, by Tim Peters
